<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cpp&#39;Blog</title>
  
  <subtitle>一个菜鸡的学习记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-16T07:53:45.930Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>曹平</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux下git免登陆设置</title>
    <link href="http://yoursite.com/2018/11/16/linux%E4%B8%8Bgit%E5%85%8D%E7%99%BB%E9%99%86%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/11/16/linux下git免登陆设置/</id>
    <published>2018-11-16T07:51:00.000Z</published>
    <updated>2018-11-16T07:53:45.930Z</updated>
    
    <content type="html"><![CDATA[<p>使用Git的时候，每次操作都得输入用户名密码，神烦啊！<br>网上找了资料很快就弄好了，做个记录，以备不时之需。</p><h3 id="1-创建-git-credentials文件"><a href="#1-创建-git-credentials文件" class="headerlink" title="1.创建.git-credentials文件"></a>1.创建.git-credentials文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">vim .git-credentials</span><br></pre></td></tr></table></figure><p>在文件中写入</p><blockquote><p><code>https://{username}:{password}@github.com</code></p></blockquote><p>即你的用户名密码，保存退出。</p><h3 id="2-在终端下执行"><a href="#2-在终端下执行" class="headerlink" title="2.在终端下执行"></a>2.在终端下执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h3 id="3-查看是否成功"><a href="#3-查看是否成功" class="headerlink" title="3.查看是否成功"></a>3.查看是否成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /root/.gitconfig</span><br></pre></td></tr></table></figure><p>如果多了一项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[credential]</span><br><span class="line">helper = store</span><br></pre></td></tr></table></figure><p>设置成功。下次就不用再输入用户名密码了。   </p><p>美滋滋。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用Git的时候，每次操作都得输入用户名密码，神烦啊！&lt;br&gt;网上找了资料很快就弄好了，做个记录，以备不时之需。&lt;/p&gt;
&lt;h3 id=&quot;1-创建-git-credentials文件&quot;&gt;&lt;a href=&quot;#1-创建-git-credentials文件&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建过程记录</title>
    <link href="http://yoursite.com/2018/11/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/11/16/hexo博客搭建过程记录/</id>
    <published>2018-11-16T07:50:00.000Z</published>
    <updated>2018-11-16T07:54:06.082Z</updated>
    
    <content type="html"><![CDATA[<p>以前一直用的github.io搭的自己的博客，总觉得差点意思，还是自己整个服务器吧，以下是在阿里云centos7下完成的，记录一下。</p><h2 id="Node环境与Git安装"><a href="#Node环境与Git安装" class="headerlink" title="Node环境与Git安装"></a>Node环境与Git安装</h2><p>hexo基于nodeJs，所以首先要安装node</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">wget https://nodejs.org/dist/v10.13.0/node-v10.13.0-linux-x64.tar.xz</span><br><span class="line">tar -xvf node-v10.13.0-linux-x64.tar.xz</span><br><span class="line">mv node-v10.13.0-linux-x64  nodejs</span><br></pre></td></tr></table></figure><p>可以到<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a>下载需要的node版本，如果下载sourceCode源码版本，需要自己编译很长时间，不推荐，我下载的Linux Binaries (x64)</p><p>查看 nodejs文件夹 下有是否有node 和npm文件，如果没有重新下载安装。</p><h3 id="建立软链接"><a href="#建立软链接" class="headerlink" title="建立软链接"></a>建立软链接</h3><p>将npm和node命令转为全局命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/src/nodejs/bin/npm /usr/local/bin/npm</span><br><span class="line">ln -s /usr/local/src/nodejs/bin/node /usr/local/bin/node</span><br></pre></td></tr></table></figure><h3 id="检验node是否已全局可用"><a href="#检验node是否已全局可用" class="headerlink" title="检验node是否已全局可用"></a>检验node是否已全局可用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h3 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h3><p>如果想使用cnpm 可以全局安装后，建立软链接，同2，不再赘述</p><h3 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><h3 id="全局安装hexo"><a href="#全局安装hexo" class="headerlink" title="全局安装hexo"></a>全局安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化hexo项目"><a href="#初始化hexo项目" class="headerlink" title="初始化hexo项目"></a>初始化hexo项目</h3><p>进入hexo项目文件夹，我的是在/home/apps/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/apps/</span><br><span class="line">hexo init hexoblog</span><br><span class="line">cd hexoblog</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>安装完成后目录如下</p><ul><li>node_modules：是依赖包</li><li>public：存放的是生成的页面</li><li>scaffolds：命令生成文章等的模板</li><li>source：用命令创建的各种文章</li><li>themes：主题</li><li>_config.yml：整个博客的配置</li><li>db.json：source解析所得到的</li><li>package.json：项目所需模块项目的配置信息</li></ul><ol><li>配置</li></ol><p>网站的初始配置都在_config.yml中，我们可以在其中修改大部分配置。</p><p>具体配置见 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener"><code>hexo官网</code></a></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>安装完成后，hollow world 终于可以打开了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/apps/hexoblog</span><br><span class="line">hexo s</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>现在打开服务器ip 4000 端口即可看到Hellow world 页面啦<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://pi40bre2b.bkt.clouddn.com/2018-11-15-hexo博客搭建过程记录-20181115.png-sy" alt="2018-11-15-hexo博客搭建过程记录-20181115" title="">                </div>                <div class="image-caption">2018-11-15-hexo博客搭建过程记录-20181115</div>            </figure></p><h3 id="主题的使用"><a href="#主题的使用" class="headerlink" title="主题的使用"></a>主题的使用</h3><p>hexo安装完成后切换主题极其简单，我现在用的是Material Design 风格的Hexo主题 <a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener"><code>indigo</code></a> ,<br>更多主题可以在 <a href="https://hexo.io/themes/" target="_blank" rel="noopener"><code>官网</code></a> 查看，选择你心仪的主题即可，亦可自己开发DIY。</p><blockquote><p>别忘了给作者start哦</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/apps/hexoblog/</span><br><span class="line">git clone https://github.com/yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure><p>然后将_config.yml中 <code>theme</code> 选项设为 <code>indigo</code> 即可</p><p>此主题需要安装依赖，具体步骤查看作者文档 <a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85" target="_blank" rel="noopener"><code>文档</code></a></p><h3 id="hexo管理工具"><a href="#hexo管理工具" class="headerlink" title="hexo管理工具"></a>hexo管理工具</h3><p>如果我们每次写完都要把文件传到服务器，再 <code>hexo g -d</code>,那岂不是很麻烦，当然也可以接受，不过hexo-admin可以更方便的管理你的博文，是你在随便一个浏览器即可写作，美滋滋</p><p>看这里即可，使用极其简单</p><blockquote><p><a href="https://jaredforsyth.com/hexo-admin/" target="_blank" rel="noopener">hexo-admin</a></p></blockquote><p>##结束</p><p>如果不出意外，现在你已经可以写文章了，具体的文章写作和加载，请直接看官网吧。有啥意外可以问我😀😀😀</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以前一直用的github.io搭的自己的博客，总觉得差点意思，还是自己整个服务器吧，以下是在阿里云centos7下完成的，记录一下。&lt;/p&gt;
&lt;h2 id=&quot;Node环境与Git安装&quot;&gt;&lt;a href=&quot;#Node环境与Git安装&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>centos下nginx的安装与自启</title>
    <link href="http://yoursite.com/2018/11/16/centos%E4%B8%8Bnginx%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E8%87%AA%E5%90%AF/"/>
    <id>http://yoursite.com/2018/11/16/centos下nginx的安装与自启/</id>
    <published>2018-11-16T07:49:00.000Z</published>
    <updated>2018-11-16T07:54:46.574Z</updated>
    
    <content type="html"><![CDATA[<p>老早就想买个服务器，可惜囊中羞涩，一直没有下手，前两天逛阿里云看见个云翼计划，赶紧踩着青春的尾巴买了一年ECS<br>自己没事耍耍也是好的呀</p><blockquote><p><a href="https://promotion.aliyun.com/ntms/act/campus2018.html" target="_blank" rel="noopener">阿里云翼计划</a>  </p></blockquote><p>废话不多说，这就开始</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>服务器一台 我用的是阿里云centos7</li><li>xshell 其它亦可</li><li>linux基本操作</li></ol><h2 id="nginx和配置"><a href="#nginx和配置" class="headerlink" title="nginx和配置"></a>nginx和配置</h2><p>我们一会还要安装node，node自己本身可以作为服务器进行驱动，但是node本身对文件的处理能力并不是很好，所以当我们的生产环境中应尽量使用nginx来处理静态的资源以及反向代理，同时也解决了node分布式以及负载均衡的相关问题。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>首先安装make gcc之类的东西，编译用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install automake autoconf libtool make</span><br><span class="line">yum install gcc gcc-c++</span><br></pre></td></tr></table></figure></li><li><p>选择nginx安装目录，我选的是 /usr/local/src</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br></pre></td></tr></table></figure></li><li><p>一般我们都需要先装pcre, zlib，前者为了重写rewrite，后者为了gzip压缩。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz</span><br><span class="line">tar -zxvf pcre-8.42.tar.gz</span><br><span class="line">cd pcre-8.42</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li></ol><p>可以在<a href="ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/" target="_blank" rel="noopener">ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/</a>选择最新版本pcre</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar -zxvf zlib-1.2.11.tar.gz</span><br><span class="line">cd zlib-1.2.11</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>可以在<a href="http://zlib.net/" target="_blank" rel="noopener">http://zlib.net/</a>选择最新版本zlib</p><ol start="4"><li>安装ssl<br>网络通信安全，功能丰富且自包含的开源安全工具箱<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.openssl.org/source/openssl-1.1.1.tar.gz</span><br><span class="line">tar -zxvf openssl-1.1.1.tar.gz</span><br></pre></td></tr></table></figure></li></ol><p>可以在<a href="https://www.openssl.org/source/" target="_blank" rel="noopener">https://www.openssl.org/source/</a>选择最新版本openssl</p><ol start="4"><li>安装nginx</li></ol><p>Nginx 一般有两个版本，分别是稳定版和开发版，您可以根据您的目的来选择这两个版本的其中一个，下面是把 Nginx 安装到 /usr/local/nginx 目录下的详细步骤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.4.2.tar.gz</span><br><span class="line">tar -zxvf nginx-1.4.2.tar.gz</span><br><span class="line">cd nginx-1.4.2</span><br><span class="line"> </span><br><span class="line">./configure --sbin-path=/usr/local/nginx/nginx \</span><br><span class="line">--conf-path=/usr/local/nginx/nginx.conf \</span><br><span class="line">--pid-path=/usr/local/nginx/nginx.pid \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-pcre=/usr/src/local/pcre-8.42 \</span><br><span class="line">--with-zlib=/usr/src/local/zlib-1.2.11 \</span><br><span class="line">--with-openssl=/usr/src/local/openssl-1.1.1</span><br><span class="line"> </span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>–with-pcre=/usr/src/local/pcre-8.42 指的是pcre-8.42 的源码路径。<br>–with-zlib=/usr/src/local/zlib-1.2.11 指的是zlib-1.2.11 的源码路径。</p><h3 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h3><p>安装成功后 /usr/local/nginx 目录下如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">drwx------  2 nobody root    4096 Nov  2 10:16 client_body_temp</span><br><span class="line">-rw-r--r--  1 root   root    1034 Nov  1 18:43 fastcgi.conf</span><br><span class="line">-rw-r--r--  1 root   root    1034 Nov  1 18:43 fastcgi.conf.default</span><br><span class="line">-rw-r--r--  1 root   root     964 Nov  1 18:43 fastcgi_params</span><br><span class="line">-rw-r--r--  1 root   root     964 Nov  1 18:43 fastcgi_params.default</span><br><span class="line">drwx------  2 nobody root    4096 Nov  2 10:16 fastcgi_temp</span><br><span class="line">drwxr-xr-x  2 root   root    4096 Nov  2 11:11 html</span><br><span class="line">-rw-r--r--  1 root   root    2837 Nov  1 18:43 koi-utf</span><br><span class="line">-rw-r--r--  1 root   root    2223 Nov  1 18:43 koi-win</span><br><span class="line">drwxr-xr-x  2 root   root    4096 Nov  2 10:16 logs</span><br><span class="line">-rw-r--r--  1 root   root    3463 Nov  1 18:43 mime.types</span><br><span class="line">-rw-r--r--  1 root   root    3463 Nov  1 18:43 mime.types.default</span><br><span class="line">-rwxr-xr-x  1 root   root 7177456 Nov  1 18:43 nginx</span><br><span class="line">-rw-r--r--  1 root   root    3937 Nov 13 16:14 nginx.conf</span><br><span class="line">-rw-r--r--  1 root   root    2685 Nov  1 18:43 nginx.conf.default</span><br><span class="line">-rw-r--r--  1 root   root       5 Nov 12 10:02 nginx.pid</span><br><span class="line">drwx------ 12 nobody root    4096 Nov 13 15:29 proxy_temp</span><br><span class="line">-rw-r--r--  1 root   root     596 Nov  1 18:43 scgi_params</span><br><span class="line">-rw-r--r--  1 root   root     596 Nov  1 18:43 scgi_params.default</span><br><span class="line">drwx------  2 nobody root    4096 Nov  2 10:16 scgi_temp</span><br><span class="line">-rw-r--r--  1 root   root     623 Nov  1 18:43 uwsgi_params</span><br><span class="line">-rw-r--r--  1 root   root     623 Nov  1 18:43 uwsgi_params.default</span><br><span class="line">drwx------  2 nobody root    4096 Nov  2 10:16 uwsgi_temp</span><br><span class="line">-rw-r--r--  1 root   root    3610 Nov  1 18:43 win-utf</span><br></pre></td></tr></table></figure></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><p>现在打开浏览器，输入此机器IP即可看到  </p><blockquote><p>Welcome To Nginx</p></blockquote><p>安装成功！</p><h3 id="将nginx加入可执行程序目录"><a href="#将nginx加入可执行程序目录" class="headerlink" title="将nginx加入可执行程序目录"></a>将nginx加入可执行程序目录</h3><p>竟然每次操作nginx都要进入/usr/local/nginx/<br>好麻烦有木有<br>没关系 软链接来帮你<br>/usr/local/bin目录是给用户放置自己的可执行程序的地方,<br>我们只需在这里建立nginx的软链接即可全局执行nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/nginx/nginx /usr/local/bin/nginx</span><br></pre></td></tr></table></figure><p>大功告成！</p><h3 id="设置nginx开机自启动"><a href="#设置nginx开机自启动" class="headerlink" title="设置nginx开机自启动"></a>设置nginx开机自启动</h3><p>每次开机我们都要启动nginx，同样巨麻烦，所以可以写一个自启动脚本，使其开机自启动，岂不美滋滋<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/rc.d/init.d</span><br><span class="line">vim nginxserver</span><br></pre></td></tr></table></figure></p><p>这是nginx官网上的自启脚本，将这些粘贴进nginxserver</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig:   - 85 15</span></span><br><span class="line"><span class="comment"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="comment">#               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># config:      /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># config:      /etc/sysconfig/nginx</span></span><br><span class="line"><span class="comment"># pidfile:     /var/run/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">nginx=<span class="string">"/usr/local/nginx/nginx"</span></span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/usr/local/nginx/nginx.conf"</span></span><br><span class="line"></span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span><br><span class="line">   <span class="comment"># make required directories</span></span><br><span class="line">   user=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:.*--user="</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span><br><span class="line">   <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$user</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> [ -z <span class="string">"`grep <span class="variable">$user</span> /etc/passwd`"</span> ]; <span class="keyword">then</span></span><br><span class="line">         useradd -M -s /bin/nologin <span class="variable">$user</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">      options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span><br><span class="line">      <span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span><br><span class="line">          <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span><br><span class="line">              value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span><br><span class="line">              <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                  <span class="comment"># echo "creating" $value</span></span><br><span class="line">                  mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span><br><span class="line">              <span class="keyword">fi</span></span><br><span class="line">          <span class="keyword">fi</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    [ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5</span><br><span class="line">    [ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6</span><br><span class="line">    make_dirs</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">    daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$prog</span> -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$nginx</span> -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">  <span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123;</span><br><span class="line">    status <span class="variable">$prog</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 7</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><ol><li>:wq保存退出</li><li><p>增加脚本的可执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/rc.d/init.d/nginxserver</span><br></pre></td></tr></table></figure></li><li><p>添加脚本到开机自动启动项目中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/rc.d/init.d</span><br><span class="line">chkconfig --add nginxserver</span><br><span class="line">chkconfig nginxserver on</span><br></pre></td></tr></table></figure></li></ol><p>完事！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;老早就想买个服务器，可惜囊中羞涩，一直没有下手，前两天逛阿里云看见个云翼计划，赶紧踩着青春的尾巴买了一年ECS&lt;br&gt;自己没事耍耍也是好的呀&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://promotion.aliyun.com/ntms/act
      
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
  </entry>
  
</feed>
